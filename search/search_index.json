{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":""},{"location":"#what-is-equinix-labs","title":"What is Equinix Labs?","text":"<p>Equinix Labs offers workshops, proof of concepts, and tools for exploring and bootstrapping Equinix digital infrastructure including Fabric, Metal, and Network Edge.</p>"},{"location":"#about-the-workshop","title":"About the workshop","text":"<p>The goals of this workshop are to have the user:</p> <ul> <li>Provision a bare metal server in a metro of their choice</li> <li>Setup a Github Self-hosted Runner on Equinix Metal</li> <li>Run a Github Action on a self-hosted runner</li> </ul>"},{"location":"#workshop-agenda","title":"Workshop agenda","text":"<p>This workshop is split into five parts:</p> Part Title Duration 1 Setup 15 minutes 2 Deploy an Equinix Metal machine 10 minutes 3 Setup a Github Self-hosted runner 15 minutes 4 Run a job on your self-hosted runner 10 minutes 5 Conclusion 5 minutes"},{"location":"parts/conclusion/","title":"Conclusion","text":""},{"location":"parts/conclusion/#conclusion","title":"Conclusion","text":"<p>Thank you for participating in the workshop! Let's recap some of the key takeways that we've learned:</p> <ul> <li>Signed up for an Equinix Metal account and created an API key</li> <li>Installed the Equinix Metal CLI</li> <li>You prepared a code repository to use for creating and testing your runners.</li> <li>You created a new machine on Equinix Metal to use as a runner. We use a smaller machine for this workshop, but you can use any machine size you want, provided it is the right architecture (x64 or arm64) for your code.</li> <li>You configured a new runner for your repository.</li> <li>You installed the prerequisites for the runner on your Equinix Metal runner machine.</li> <li>You downloaded and configured the runner software on your Equinix Metal runner machine.</li> <li>We configured our github actions workflow to use a self-hosted runner.</li> <li>We ran the workflow on our self-hosted runner.</li> <li>We saw the output of the workflow on our self-hosted runner.</li> <li>We saw the output of the workflow on github.</li> </ul>"},{"location":"parts/conclusion/#references","title":"References","text":"<ul> <li>GitHub Docs on Self-Hosted Runners</li> <li>Equinix Metal CLI Documentation</li> <li>Equinix Metal Pricing</li> </ul>"},{"location":"parts/conclusion/#resources","title":"Resources","text":"<p>Here are a few other resources to look at to continue your Equinix Metal journey:</p> <ul> <li>Deploy @ Equinix: A one-stop shop for blogs, guides, and plenty of other resources.</li> <li>Equinix Metal Docs: Equinix Metal official documentation.</li> <li>Equinix Metal APIs: Programmatically interact with Equinix Metal</li> <li>Equinix Labs: Provides SDKs and Terraform modultes for Infrastructure as Code tools.</li> <li>Equinix Community: A global community for customers and Equinix users.</li> </ul>"},{"location":"parts/part1/","title":"Part 1: Account and API Key Setup","text":"<p>To run this workshop you will need access to an Equinix Metal Account or create a new one following step 1 below.</p> <p>Note:  You are responsible for the cost of resources created in your Equinix Metal account while running this workshop.</p>"},{"location":"parts/part1/#steps","title":"Steps","text":""},{"location":"parts/part1/#1-create-an-equinix-metal-account","title":"1. Create an Equinix Metal account","text":"<p>If you have never used Equinix Metal before, don't worry, you just need 2 minutes to sign-up and create your first organization. If you have any doubt you can watch our Getting Started with Equinix Metal video.</p>"},{"location":"parts/part1/#2-create-an-api-key","title":"2. Create an API key","text":"<p>API keys in Metal can be tied to your user or to a single project. For this workshop we will need a user-level API key.</p> <p>Note: Project API keys do not have access to the entirety of the API; some endpoints can only be used by personal API keys.</p> <p>To create a new user API key, access your user Profile in the Equinix Metal console, click on the User Icon, and click My Profile.</p> <p></p> <ul> <li>Select the <code>API Keys</code> tab.</li> <li>Click on <code>+ Add New Key</code>.</li> <li>Create a new key with <code>Read/Write</code> permissions.</li> </ul> <p></p>"},{"location":"parts/part1/#3-install-and-configure-metal-cli","title":"3. Install and Configure Metal CLI","text":"<p>Once you are familiar with the console you may feel more comfortable managing your Equinix Metal resources with the command-line interface tool Metal-cli.</p> <p>You only need to download a binary to start enjoying Metal-cli, but you may want to check out the different installation options.</p> <p>Once installed you need to configure your credentials. To do this, execute <code>metal init</code> and provide the requested information.</p> <p>Expected output:</p> Bash<pre><code>$ metal init\n\nEquinix Metal API Tokens can be obtained through the portal at https://console.equinix.com/.\nSee https://metal.equinix.com/developers/docs/accounts/users/ for more details.\n\nToken (hidden): \nOrganization ID [27703148-e7bf-4a2f-95cf-46e7dddb4bb8]: \nProject ID []: \n\nWriting /Users/Username/.config/equinix/metal.yaml\n</code></pre>"},{"location":"parts/part1/#3-verify","title":"3. Verify","text":"Bash<pre><code>$ metal organization get\n\n+--------------------------------------+-------------------------------------+----------------------+\n|                  ID                  |                NAME                 |       CREATED        |\n+--------------------------------------+-------------------------------------+----------------------+\n| 27703148-e7bf-4a2f-95cf-46e7dddb4bb8 | Equinix Github Self-hosted Runner   | 2023-01-01T00:00:00Z |\n+--------------------------------------+-------------------------------------+----------------------+\n</code></pre>"},{"location":"parts/part1/#discussion","title":"Discussion","text":"<p>Before proceeding to the next part let's take a few minutes to discuss what we did. Here are some questions to start the discussion.</p> <ul> <li>Can we create API keys without manually using the portal?</li> </ul>"},{"location":"parts/part2/","title":"2. Fork a Repo and Deploy a Server","text":""},{"location":"parts/part2/#part-2-fork-a-repo-and-deploy-a-server","title":"Part 2: Fork a Repo and Deploy a Server","text":"<p>In this steps we'll be getting familiar with GitHub Actions. If it's your first time using GitHub Actions take a few minutes to flip through their documentation.</p>"},{"location":"parts/part2/#steps","title":"Steps","text":""},{"location":"parts/part2/#1-fork-the-metal-cli-repo-to-your-own-github-namespace","title":"1. Fork the <code>metal-cli</code> repo to your own GitHub namespace","text":"<p>For this workshop, we'll be making a copy of the Equinix Metal CLI code repository, <code>metal-cli</code>, to create and test our runners. You could use your own code repository if you already have one. If you do, you can skip this step.</p> <p>Click on this link \"Fork Metal CLI\" and fork a copy to your own Github account.</p>"},{"location":"parts/part2/#2-disable-the-actions-on-your-fork-of-metal-cli","title":"2. Disable the actions on your fork of metal-cli","text":"<p>Go to your fork of the <code>metal-cli</code> repo and click on Settings &gt; Actions &gt; Runners and disable the actions for now.</p> <p></p>"},{"location":"parts/part2/#3-deploy-a-new-machine-on-equinix-metal","title":"3. Deploy a new machine on Equinix Metal","text":"<p>We'll also need a server to run the actions on, in this step we provision a Ubuntu 22.04 server on Equinix Metal, through the CLI.</p> Bash<pre><code>metal device create -p $METAL_PROJECT_ID -P c3.medium.x86 -m da -H github-runner-test -O ubuntu_22_04\n</code></pre>"},{"location":"parts/part2/#discussion","title":"Discussion","text":"<p>Before proceeding to the next part let's take a few minutes to discuss what we did. Here are some questions to start the discussion.</p> <ul> <li>What sorts of code repositories would you want to run your own runners on?</li> <li>What size machine would be right for your runners?</li> </ul>"},{"location":"parts/part3/","title":"3. Setup a Github Self-Hosted Runner","text":""},{"location":"parts/part3/#part-3-setup-a-github-self-hosted-runner","title":"Part 3: Setup a Github Self-Hosted Runner","text":"<p>In this steps we'll be getting familiar with GitHub Self-Hosted Runners. If it's your first time using Self-Hosted Runners, take a few minutes to flip through their documentation.</p>"},{"location":"parts/part3/#steps","title":"Steps","text":""},{"location":"parts/part3/#1-setup-your-forked-repo-to-use-self-hosted-runners","title":"1. Setup your forked repo to use Self-Hosted Runners","text":"<p>Navigate to your <code>metal-cli</code> fork. For me it's https://github.com/cprivitere/metal-cli, however it'll be different per person. It'll be in the format:</p> Text Only<pre><code>https://github.com/&lt;your-github-username&gt;/metal-cli\n</code></pre> <p>Click on the Settings tab, you should see a view like this:</p> <p></p> <p>On the left bar, click on Actions, then Runners.</p> <p></p> <p>To create a new Self-Hosted Runner, click the new self-hosted runner button.</p> <p></p> <p>Choose the correct OS and architecture option, if you're using the recommend system from the previous step, it would be Linux and x64.</p> <p></p> <p>You should now see instructions for downloading, configuring, and using the GitHub Runner software.</p> <p></p>"},{"location":"parts/part3/#1-run-the-commands-to-download-and-configure-the-runner","title":"1. Run the commands to download and configure the runner","text":"<p>The first step to installing the GitHub Runner software would be to SSH into the machine you created earlier.</p> Bash<pre><code>ssh root@your-metal-server\n</code></pre> <p>You'll also need to install <code>gcc</code>, create a new user, and switch to it. Github Runners do not run as <code>root</code>.</p> Bash<pre><code>apt update\napt install build-essential gcc\nuseradd -m ghrunner -s /bin/bash\nsu - ghrunner\n</code></pre> <p>Next, copy and paste the Download and Configure sections from the Add New Runner page from the previous step.</p> <p>Note</p> <ul> <li>Take the defaults by just pressing enter when it asks for the group, name, labels, and work folder.</li> <li>Don't forget to run <code>./run.sh</code></li> <li>If you were doing this as a long lived runner in production this would be better executed as a systemctl service, but long lived runners are not recommended, so just running <code>./run.sh</code> inline is fine for today.</li> </ul> <p>Your runner should now say it's Listening for Jobs.</p>"},{"location":"parts/part3/#discussion","title":"Discussion","text":"<p>Before proceeding to the next part let's take a few minutes to discuss what we did. Here are some questions to start the discussion.</p> <ul> <li>Can you have more than one self-hosted runner?</li> <li>What sorts of pre-requisites would your code repositories need on your own runners?</li> <li>How should I secure my runners?</li> </ul>"},{"location":"parts/part4/","title":"4. Execute a Github Action on your Runner","text":""},{"location":"parts/part4/#part-3-execute-a-github-action-on-your-runner","title":"Part 3: Execute a Github Action on your Runner","text":"<p>Now that we've got our GitHub Self-Hosted Runner set up let's test it out by running some tests with GitHub Actions!</p>"},{"location":"parts/part4/#steps","title":"Steps","text":""},{"location":"parts/part4/#1-configure-our-forked-metal-cli-repo-to-use-the-new-self-hosted-runner","title":"1. Configure our forked <code>metal-cli</code> repo to use the new Self-Hosted Runner","text":"<p>Let's go back to our fork of metal-cli. For me it's https://github.com/cprivitere/metal-cli.</p> <p>Navigate to the Runner settings again by going to Settings &gt; Actions &gt; Runners. You should see your new self-hosted runner listed.</p> <p></p> <p>Now we must edit our Github Actions workflow to use the new self-hosted runner. To do that, navigate to the file:</p> Text Only<pre><code>metal-cli/.github/workflows/test.yml\n</code></pre> <p></p> <p>Edit the <code>test.yml</code> file with the following changes.</p> <ul> <li>Replace:</li> </ul> YAML<pre><code>    runs-on: ubuntu-latest\n</code></pre> <p>with</p> YAML<pre><code>    runs-on: self-hosted\n</code></pre> <ul> <li>Underneath the <code>on:</code> line, add:</li> </ul> YAML<pre><code>  workflow_dispatch:\n</code></pre> <p>Your <code>test.yml</code> file should now look like:</p> YAML<pre><code>name: Go Tests\non:\n  pull_request:\n  workflow_dispatch:\njobs:\n  test:\n    runs-on: self-hosted\n    timeout-minutes: 10\n    steps:\n    - name: Set up Go\n      uses: actions/setup-go@v4.0.0\n      with:\n        go-version: '1.19'\n    - name: Check out code into the Go module directory\n      uses: actions/checkout@v3\n    - name: Get dependencies\n      run: go mod download\n    - name: Build\n      run: go build -v ./...\n    - name: TF tests\n      run: go test -v -cover -parallel 4 ./...\n</code></pre> <p>You can now commit your changes.</p>"},{"location":"parts/part4/#2-ensure-your-github-actions-are-being-run-on-your-self-hosted-runner","title":"2. Ensure your GitHub Actions are being run on your Self-Hosted Runner","text":"<p>Go back to Settings &gt; Actions &gt; General and click on Allow all actions and reusable workflows. Save the changes.</p> <p></p> <p>Next, click on Actions and click on Go Tests' on the left side.</p> <p></p> <p>Click the Run workflow drop down on the right side and run it for the main branch.</p> <p></p> <p>Now watch the output on your GitHub Runner and the output inside GitHub. The following should appear:</p> Text Only<pre><code>Running job: test\n</code></pre>"},{"location":"parts/part4/#discussion","title":"Discussion","text":"<p>Before proceeding to the next part let's take a few minutes to discuss what we did. Here are some questions to start the discussion.</p> <ul> <li>Can I use a mix of self-hosted and github-hosted runners within a workflow?</li> <li>What sort of logging do I get from my self-hosted runner?</li> <li>Can I see the results of my self-hosted runner on Github?</li> </ul>"}]}